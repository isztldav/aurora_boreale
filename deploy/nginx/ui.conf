upstream ui_app {
  server ui:3000;
}

upstream api_app {
  server web:8000;
}

server {
  listen 80;
  server_name _;

  # UI (Next.js)
  location / {
    proxy_pass http://ui_app;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # API (FastAPI) via reverse proxy
  location /api/ {
    proxy_pass http://api_app$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # TensorBoard mounted under /tb on the backend
  location /tb/ {
    proxy_pass http://api_app$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

